openapi: 3.0.3
info:
  title: Book-King.org API
  description: This is an API for the Book-King.org website.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Local server address
paths:
  /books:
    get:
      summary: Get books with filters
      operationId: getBooks
      description: Get books with provided filters
      parameters:
        - $ref: '#/components/parameters/authorId'
        - $ref: '#/components/parameters/minPrice'
        - $ref: '#/components/parameters/maxPrice'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: Books list that corresponds filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Add a book to the catalog
      operationId: addBook
      description: >-
        Add a book to the catalog. [WARNING] Need to make it an administrator
        privilidge
      requestBody:
        $ref: '#/components/requestBodies/newBook'
      responses:
        '200':
          description: Book successfully created.
        '400':
          description: >-
            Not enough parameters provided or parameters' formats does not meet
            the requirements.
  /authors:
    get:
      summary: Get authors.
      description: Get all or paginated authors in alphabetic order.
      parameters:
        - $ref: '#/components/parameters/page1'
        - $ref: '#/components/parameters/count1'
      responses:
        '200':
          description: Success. Authors list that corresponds filters.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
    post:
      summary: Create an author
      description: Create an author
      requestBody:
        $ref: '#/components/requestBodies/newAuthor'
      responses:
        '200':
          description: Author successfully created.
        '400':
          description: >-
            Not enough parameters provided or parameters' formats do not meet
            the requirements.
  '/static/image/{imageId}':
    get:
      summary: Get image by imageId
      operationId: getImageById
      description: Get image with the provided database pk id.
      parameters:
        - $ref: '#/components/parameters/imageId'
      responses:
        '200':
          description: Success. Image found.
          content:
            image/jpeg: {}
            image/gif: {}
            image/png: {}
        '404':
          description: Image with the provided imageId was not found.
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 121
        authors:
          type: array
          required:
            - items
          items:
            type: string
            example: Arthur Morgan
        price:
          type: number
          format: double
          example: 10.99
        releaseYear:
          type: integer
          example: 2018
        mainImage:
          type: string
          example: >-
            https://s3-goods.ozstatic.by/480/225/831/10/10831225_0_Finansist_Teodor_Drayzer.jpg
    author:
      description: Author object.
      type: object
      properties:
        id:
          type: integer
          example: 111
        name:
          type: string
          example: Arthur Morgan
  parameters:
    authorId:
      name: authorId
      in: query
      description: Author id to filter by. All the authors are selected if left empty.
      required: false
      schema:
        type: integer
    minPrice:
      name: minPrice
      in: query
      description: Minimal price to filter books. -Infinity if left empty.
      required: false
      schema:
        type: integer
    maxPrice:
      name: maxPrice
      in: query
      description: Minimal price to filter books. -Infinity if left empty.
      required: false
      schema:
        type: integer
    page:
      name: page
      in: query
      description: Page number starting from 1.
      required: false
      schema:
        type: integer
    count:
      name: count
      in: query
      description: Number of elements per page.
      required: false
      schema:
        type: integer
    page1:
      name: page
      required: false
      in: query
      description: Page number starting with 1.
      schema:
        type: integer
    count1:
      name: count
      required: false
      in: query
      description: Elements per page number.
      schema:
        type: integer
    imageId:
      name: imageId
      in: path
      description: Image database pk id.
      required: true
      schema:
        type: integer
  requestBodies:
    newBook:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - authors
              - name
              - releaseYear
              - price
              - mainImage
              - images
            properties:
              authors:
                type: array
                description: Book authors' ids array. Authors with provided ids must exist.
                items:
                  type: integer
                  example: 111
              name:
                type: string
                example: The Lord of the Rings
                description: Book name
              releaseYear:
                type: integer
                description: Book release year
                example: 2018
              price:
                type: number
                description: Price for the book
                format: double
                example: 10.99
              mainImage:
                type: string
                format: binary
                description: Book main image. Displayed in the content screen.
              images:
                type: string
                format: binary
                description: Book images to be displayed in details screen.
    newAuthor:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                description: New author name
                type: string
                example: Arthur Morgan
